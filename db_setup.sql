
CREATE TABLE tiers (
	tier_code varchar(5) primary key,
	tier_name varchar(20) not null,
	max_requests_allowed int not null,
	constraint uq_tier_name unique(tier_name)
);

CREATE TABLE users (
	user_id bigint generated by default as identity primary key,
	username varchar(64) not null,
	tier_code varchar(5),
	no_of_requests int not null default 0,
	date_created timestamptz not null default NOW(),
	date_updated timestamptz not null default NOW(),
	constraint uq_username unique(username),
	constraint tier_constraint
		foreign key(tier_code)
		references tiers(tier_code)
		ON delete set NULL
);

CREATE TABLE urls (
	url_id bigint generated by default as identity primary key,
	user_id bigint,
	original_url text not null,
	short_id text not null,
	date_created timestamptz not null default NOW(),
	date_updated timestamptz not null default NOW(),
	constraint author foreign key(user_id) references users(user_id),
	constraint uq_original_short_url unique(user_id, short_id)
);

ALTER TABLE urls 
ADD CONSTRAINT tier_check
CHECK (
	CheckIfUrlCreationAllowed(user_id) = 1
);

INSERT INTO TIERS(tier_code, tier_name, max_requests_allowed) VALUES ('T1', 'Tier 1', 1000);
INSERT INTO TIERS(tier_code, tier_name, max_requests_allowed) VALUES ('T2', 'Tier 2', 100);
INSERT INTO TIERS(tier_code, tier_name, max_requests_allowed) VALUES ('T3', 'Tier 3', 25);
